"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var Dimension_1 = __importDefault(require("./Dimension"));
var Point_1 = __importDefault(require("./Point"));
var Geometry_1 = __importDefault(require("./Geometry"));
var GameObject_1 = __importDefault(require("../core/GameObject"));
var Model_1 = require("../core/Model");
var Conways = /** @class */ (function () {
    function Conways(render, screen, rows, aliveColor, deadColor, speed, seed) {
        this.isAlive = function (position, world) {
            var neighboursCount = 0;
            var cellStatus = world[position.x][position.y].props["alive"];
            if (world[position.x + 1] && world[position.x + 1][position.y] &&
                world[position.x + 1][position.y].props["alive"])
                neighboursCount++;
            if (world[position.x - 1] && world[position.x - 1][position.y] &&
                world[position.x - 1][position.y].props["alive"])
                neighboursCount++;
            if (world[position.x] && world[position.x][position.y + 1] &&
                world[position.x][position.y + 1].props["alive"])
                neighboursCount++;
            if (world[position.x] && world[position.x][position.y - 1] &&
                world[position.x][position.y - 1].props["alive"])
                neighboursCount++;
            if (world[position.x - 1] && world[position.x - 1][position.y + 1] &&
                world[position.x - 1][position.y + 1].props["alive"])
                neighboursCount++;
            if (world[position.x + 1] && world[position.x + 1][position.y + 1] &&
                world[position.x + 1][position.y + 1].props["alive"])
                neighboursCount++;
            if (world[position.x - 1] && world[position.x - 1][position.y - 1] &&
                world[position.x - 1][position.y - 1].props["alive"])
                neighboursCount++;
            if (world[position.x + 1] && world[position.x + 1][position.y - 1] &&
                world[position.x + 1][position.y - 1].props["alive"])
                neighboursCount++;
            if (cellStatus) {
                if (neighboursCount < 2)
                    return false;
                if (neighboursCount === 2 || neighboursCount === 3)
                    return true;
                if (neighboursCount > 3)
                    return false;
            }
            else if (!cellStatus && neighboursCount === 3)
                return true;
            else
                return false;
        };
        this.shouldRender = true;
        this.render = render;
        this.screen = screen;
        this.rows = rows;
        this.aliveColor = aliveColor;
        this.deadColor = deadColor;
        this.speed = speed;
        if (!aliveColor)
            this.aliveColor = "black";
        if (!deadColor)
            this.deadColor = "white";
        this.tileSize = new Dimension_1.default(Math.round(this.screen.width / this.rows.width), Math.round(this.screen.height / this.rows.height));
        this.matrix = seed;
        if (!seed)
            this.matrix = Geometry_1.default.createMatrix(this.rows);
        this.bufferMatrix = Geometry_1.default.createMatrix(this.rows);
        this.createAliveDeadGridOfGameObjects();
        this.start();
    }
    Conways.prototype.createAliveDeadGridOfGameObjects = function () {
        for (var i = 0; i < this.matrix.length; i++) {
            for (var j = 0; j < this.matrix[i].length; j++) {
                if (this.matrix[i][j] === 1 || Math.floor(Math.random() * 10) === 1) {
                    this.matrix[i][j] = new GameObject_1.default(Model_1.Model.RECTANGLE, new Point_1.default(i * this.tileSize.width + i, j * this.tileSize.height + j), new Dimension_1.default(this.tileSize.width, this.tileSize.height), this.aliveColor || "black");
                    this.matrix[i][j].addProperty("alive", true);
                    this.bufferMatrix[i][j] = new GameObject_1.default(Model_1.Model.RECTANGLE, new Point_1.default(i * this.tileSize.width + i, j * this.tileSize.height + j), new Dimension_1.default(this.tileSize.width, this.tileSize.height), this.aliveColor || "black");
                    this.bufferMatrix[i][j].addProperty("alive", true);
                }
                else {
                    this.matrix[i][j] = new GameObject_1.default(Model_1.Model.RECTANGLE, new Point_1.default(i * this.tileSize.width + i, j * this.tileSize.height + j), new Dimension_1.default(this.tileSize.width, this.tileSize.height), this.deadColor || "white");
                    this.matrix[i][j].addProperty("alive", false);
                    this.bufferMatrix[i][j] = new GameObject_1.default(Model_1.Model.RECTANGLE, new Point_1.default(i * this.tileSize.width + i, j * this.tileSize.height + j), new Dimension_1.default(this.tileSize.width, this.tileSize.height), this.deadColor || "white");
                    this.bufferMatrix[i][j].addProperty("alive", false);
                }
                if (this.shouldRender)
                    this.render.requestStage(this.matrix[i][j]);
            }
        }
    };
    Conways.prototype.start = function () {
        var _this = this;
        setInterval(function () {
            if (_this.shouldRender)
                _this.render.clearStage();
            for (var i = 0; i < _this.matrix.length; i++) {
                for (var j = 0; j < _this.matrix.length; j++) {
                    var alive = _this.isAlive(new Point_1.default(i, j), _this.matrix);
                    if (alive) {
                        _this.bufferMatrix[i][j].color = _this.aliveColor || "black";
                        _this.bufferMatrix[i][j].props["alive"] = true;
                    }
                    else {
                        _this.bufferMatrix[i][j].props["alive"] = false;
                        _this.bufferMatrix[i][j].color = _this.deadColor || "white";
                    }
                    if (_this.shouldRender)
                        _this.render.requestStage(_this.matrix[i][j]);
                }
            }
            // Matching properties from bufferedMatrix and matrix without losing reference.
            for (var i = 0; i < _this.matrix.length; i++) {
                for (var j = 0; j < _this.matrix.length; j++) {
                    _this.matrix[i][j].color = _this.bufferMatrix[i][j].color;
                    _this.matrix[i][j].props["alive"] = _this.bufferMatrix[i][j].props["alive"];
                }
            }
        }, this.speed || 100);
    };
    return Conways;
}());
exports.default = Conways;
//# sourceMappingURL=data:application/json;base64,